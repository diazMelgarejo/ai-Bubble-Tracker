<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="AI Bubble Tracker - Track the AI bubble compared to the Dotcom bubble">
    <meta name="theme-color" content="#1a1a2e">
    <title>AI Bubble Tracker | Live Market Analysis</title>
    
    <!-- PWA Manifest -->
    <link rel="manifest" href="data:application/json;base64,eyJuYW1lIjoiQUkgQnViYmxlIFRyYWNrZXIiLCJzaG9ydF9uYW1lIjoiQUkgVHJhY2tlciIsInN0YXJ0X3VybCI6Ii8iLCJkaXNwbGF5Ijoic3RhbmRhbG9uZSIsImJhY2tncm91bmRfY29sb3IiOiIjMWExYTJlIiwidGhlbWVfY29sb3IiOiIjMWExYTJlIiwiaWNvbnMiOlt7InNyYyI6ImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTAwIDEwMCclM0UlM0NjaXJjbGUgY3g9JzUwJyBjeT0nNTAnIHI9JzQwJyBmaWxsPSclMjMxMGI5ODEnLyUzRSUzQy9zdmclM0UiLCJzaXplcyI6IjE5MngxOTIiLCJ0eXBlIjoiaW1hZ2Uvc3ZnK3htbCJ9XX0=">
    
    <style>
        :root {
            --color-bg-primary: #0f0f1e;
            --color-bg-secondary: #1a1a2e;
            --color-bg-card: #16213e;
            --color-text-primary: #ffffff;
            --color-text-secondary: #a0a0b0;
            --color-accent-green: #10b981;
            --color-accent-blue: #3b82f6;
            --color-accent-orange: #f97316;
            --color-accent-red: #ef4444;
            --color-border: rgba(255, 255, 255, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: linear-gradient(135deg, var(--color-bg-primary) 0%, var(--color-bg-secondary) 100%);
            color: var(--color-text-primary);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Loading Overlay */
        #loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--color-bg-primary);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 10000;
            transition: opacity 0.5s ease;
        }

        #loading-overlay.hidden {
            opacity: 0;
            pointer-events: none;
        }

        .spinner {
            width: 60px;
            height: 60px;
            border: 4px solid rgba(255, 255, 255, 0.1);
            border-top-color: var(--color-accent-green);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .loading-text {
            margin-top: 20px;
            font-size: 16px;
            color: var(--color-text-secondary);
            text-align: center;
        }

        .loading-progress {
            margin-top: 10px;
            font-size: 14px;
            color: var(--color-accent-green);
            font-weight: 600;
        }

        .error-message {
            display: none;
            margin-top: 20px;
            padding: 15px 25px;
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid var(--color-accent-red);
            border-radius: 8px;
            color: var(--color-accent-red);
            max-width: 400px;
            text-align: center;
        }

        .error-message.show {
            display: block;
        }

        .retry-button {
            margin-top: 15px;
            padding: 10px 20px;
            background: var(--color-accent-green);
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: background 0.3s ease;
        }

        .retry-button:hover {
            background: #0d9668;
        }

        /* Main Content */
        #main-content {
            opacity: 0;
            transition: opacity 0.5s ease;
            padding: 20px;
            max-width: 1400px;
            margin: 0 auto;
        }

        #main-content.visible {
            opacity: 1;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 30px 20px;
        }

        .header h1 {
            font-size: 2.5rem;
            background: linear-gradient(135deg, var(--color-accent-green), var(--color-accent-blue));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
        }

        .header p {
            color: var(--color-text-secondary);
            font-size: 1.1rem;
        }

        /* Stats Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: var(--color-bg-card);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 20px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--color-text-secondary);
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .stat-subtitle {
            font-size: 0.85rem;
            color: var(--color-text-secondary);
        }

        /* Chart Container */
        .chart-container {
            background: var(--color-bg-card);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 30px;
            position: relative;
            height: 600px;
        }

        .chart-wrapper {
            position: relative;
            height: 100%;
            width: 100%;
        }

        /* Controls */
        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
            justify-content: center;
        }

        .control-button {
            padding: 10px 20px;
            background: var(--color-bg-card);
            border: 1px solid var(--color-border);
            border-radius: 8px;
            color: var(--color-text-primary);
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .control-button:hover {
            background: var(--color-accent-green);
            border-color: var(--color-accent-green);
        }

        .control-button.active {
            background: var(--color-accent-blue);
            border-color: var(--color-accent-blue);
        }

        /* Price Projections */
        .projections {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .projection-card {
            background: var(--color-bg-card);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 25px;
        }

        .projection-header {
            font-size: 1.3rem;
            font-weight: 700;
            margin-bottom: 15px;
            color: var(--color-accent-blue);
        }

        .projection-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid var(--color-border);
        }

        .projection-item:last-child {
            border-bottom: none;
        }

        .projection-asset {
            font-weight: 600;
        }

        .projection-price {
            font-size: 1.1rem;
            color: var(--color-accent-green);
            font-weight: 700;
        }

        /* Footer */
        .footer {
            text-align: center;
            padding: 30px;
            color: var(--color-text-secondary);
            font-size: 0.9rem;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .chart-container {
                height: 400px;
            }
            
            .stat-value {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div id="loading-overlay">
        <div class="spinner"></div>
        <div class="loading-text">AI Bubble Tracker</div>
        <div class="loading-progress" id="loading-progress">Initializing...</div>
        <div class="error-message" id="error-message">
            <div id="error-text">Failed to load chart libraries</div>
            <button class="retry-button" onclick="location.reload()">Retry</button>
        </div>
    </div>

    <!-- Main Content -->
    <div id="main-content">
        <header class="header">
            <h1>ðŸš€ AI Bubble Tracker</h1>
            <p>Comparing the AI Bubble to the Dotcom Bubble Timeline</p>
        </header>

        <!-- Current Stats -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-label">Days Since Start</div>
                <div class="stat-value" style="color: var(--color-accent-green);">1,032</div>
                <div class="stat-subtitle">Nov 30, 2022 - Oct 25, 2025</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Days to Conservative Peak</div>
                <div class="stat-value" style="color: var(--color-accent-blue);" id="countdown-conservative">666</div>
                <div class="stat-subtitle">Target: Sep 27, 2027</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Days to Extended Peak</div>
                <div class="stat-value" style="color: var(--color-accent-orange);" id="countdown-extended">861</div>
                <div class="stat-subtitle">Target: Mar 4, 2028</div>
            </div>
        </div>

        <!-- Chart Controls -->
        <div class="controls">
            <button class="control-button active" id="toggle-markers">Show Markers</button>
            <button class="control-button" id="export-csv">Export CSV</button>
        </div>

        <!-- Chart -->
        <div class="chart-container">
            <div class="chart-wrapper">
                <canvas id="bubble-chart"></canvas>
            </div>
        </div>

        <!-- Price Projections -->
        <div class="projections">
            <div class="projection-card">
                <div class="projection-header">Conservative Peak (4x)</div>
                <div class="projection-item">
                    <span class="projection-asset">Bitcoin</span>
                    <span class="projection-price">$494,000</span>
                </div>
                <div class="projection-item">
                    <span class="projection-asset">Ethereum</span>
                    <span class="projection-price">$18,060</span>
                </div>
                <div class="projection-item">
                    <span class="projection-asset">S&amp;P 500</span>
                    <span class="projection-price">26,864</span>
                </div>
            </div>
            <div class="projection-card">
                <div class="projection-header">Moderate Peak (5x)</div>
                <div class="projection-item">
                    <span class="projection-asset">Bitcoin</span>
                    <span class="projection-price">$617,500</span>
                </div>
                <div class="projection-item">
                    <span class="projection-asset">Ethereum</span>
                    <span class="projection-price">$22,575</span>
                </div>
                <div class="projection-item">
                    <span class="projection-asset">S&amp;P 500</span>
                    <span class="projection-price">33,580</span>
                </div>
            </div>
            <div class="projection-card">
                <div class="projection-header">Aggressive Peak (6x)</div>
                <div class="projection-item">
                    <span class="projection-asset">Bitcoin</span>
                    <span class="projection-price">$741,000</span>
                </div>
                <div class="projection-item">
                    <span class="projection-asset">Ethereum</span>
                    <span class="projection-price">$27,090</span>
                </div>
                <div class="projection-item">
                    <span class="projection-asset">S&amp;P 500</span>
                    <span class="projection-price">40,296</span>
                </div>
            </div>
        </div>

        <footer class="footer">
            <p>Data based on historical Dotcom bubble patterns (1998-2002) vs AI bubble (2022-present)</p>
            <p>Current Prices: BTC $123,500 | ETH $4,515 | S&amp;P 500 6,716</p>
        </footer>
    </div>

    <!-- Chart.js CDN with fallback -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.4/dist/chart.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@3.0.1/dist/chartjs-plugin-annotation.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@2.0.1/dist/chartjs-plugin-zoom.min.js"></script>

    <script>
        // Application State
        let bubbleChart = null;
        let showMarkers = true;
        let loadingTimeout = null;
        const LOADING_TIMEOUT_MS = 5000;

        // Update loading progress
        function updateProgress(message) {
            console.log('[AI Bubble Tracker]', message);
            const progressEl = document.getElementById('loading-progress');
            if (progressEl) {
                progressEl.textContent = message;
            }
        }

        // Show error message
        function showError(message) {
            console.error('[AI Bubble Tracker Error]', message);
            const errorEl = document.getElementById('error-message');
            const errorText = document.getElementById('error-text');
            if (errorEl && errorText) {
                errorText.textContent = message;
                errorEl.classList.add('show');
            }
        }

        // Hide loading overlay
        function hideLoading() {
            if (loadingTimeout) {
                clearTimeout(loadingTimeout);
            }
            const overlay = document.getElementById('loading-overlay');
            const content = document.getElementById('main-content');
            if (overlay && content) {
                overlay.classList.add('hidden');
                content.classList.add('visible');
                console.log('[AI Bubble Tracker] Loaded successfully!');
            }
        }

        // Generate Dotcom bubble data
        function generateDotcomData() {
            const data = [];
            for (let day = 0; day <= 1698; day++) {
                let value;
                if (day <= 500) {
                    value = 100 + (day * 0.134);
                } else if (day <= 1000) {
                    value = 167 + ((day - 500) * 0.0536);
                } else if (day <= 1125) {
                    value = 193.8 + ((day - 1000) * 0.094);
                } else {
                    // Exponential growth to peak
                    const progress = (day - 1125) / (1698 - 1125);
                    const startVal = 205.55;
                    const endVal = 765;
                    value = startVal + (endVal - startVal) * Math.pow(progress, 2.5);
                }
                data.push({ x: day, y: value });
            }
            return data;
        }

        // Generate AI bubble data
        function generateAIData() {
            const data = [];
            for (let day = 0; day <= 1893; day++) {
                let value;
                if (day <= 100) {
                    value = 100 + (day * 0.34);
                } else if (day <= 500) {
                    value = 134 + ((day - 100) * 0.165);
                } else if (day <= 775) {
                    value = 200 + ((day - 500) * 0.076);
                } else if (day <= 1032) {
                    value = 221 + ((day - 775) * 0.084);
                } else {
                    // Exponential projection to peak
                    const progress = (day - 1032) / (1893 - 1032);
                    const startVal = 242.588;
                    const endVal = 500;
                    value = startVal + (endVal - startVal) * Math.pow(progress, 2.2);
                }
                data.push({ x: day, y: value });
            }
            return data;
        }

        // Initialize Chart
        async function initializeChart() {
            try {
                updateProgress('Checking Chart.js library...');
                
                // Check if Chart.js loaded
                if (typeof Chart === 'undefined') {
                    throw new Error('Chart.js library failed to load from CDN');
                }

                updateProgress('Generating bubble data...');
                
                // Generate data in chunks to prevent blocking
                await new Promise(resolve => setTimeout(resolve, 100));
                const dotcomData = generateDotcomData();
                
                await new Promise(resolve => setTimeout(resolve, 100));
                const aiData = generateAIData();

                updateProgress('Creating visualization...');
                await new Promise(resolve => setTimeout(resolve, 100));

                const ctx = document.getElementById('bubble-chart');
                if (!ctx) {
                    throw new Error('Canvas element not found');
                }

                // Create chart configuration
                const config = {
                    type: 'line',
                    data: {
                        datasets: [
                            {
                                label: 'Dotcom Bubble (1998-2002)',
                                data: dotcomData,
                                borderColor: '#3b82f6',
                                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                                borderWidth: 3,
                                pointRadius: 0,
                                tension: 0.4,
                                fill: false
                            },
                            {
                                label: 'AI Bubble (2022-Present)',
                                data: aiData,
                                borderColor: '#10b981',
                                backgroundColor: 'rgba(16, 185, 129, 0.1)',
                                borderWidth: 3,
                                pointRadius: 0,
                                tension: 0.4,
                                fill: false
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        interaction: {
                            intersect: false,
                            mode: 'index'
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top',
                                labels: {
                                    color: '#ffffff',
                                    font: {
                                        size: 14,
                                        weight: '600'
                                    },
                                    padding: 20
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(22, 33, 62, 0.95)',
                                titleColor: '#ffffff',
                                bodyColor: '#a0a0b0',
                                borderColor: 'rgba(255, 255, 255, 0.1)',
                                borderWidth: 1,
                                padding: 12,
                                displayColors: true,
                                callbacks: {
                                    title: function(context) {
                                        return 'Day ' + context[0].parsed.x;
                                    },
                                    label: function(context) {
                                        return context.dataset.label + ': ' + context.parsed.y.toFixed(1) + ' index';
                                    }
                                }
                            },
                            annotation: {
                                annotations: {}
                            },
                            zoom: {
                                pan: {
                                    enabled: true,
                                    mode: 'x'
                                },
                                zoom: {
                                    wheel: {
                                        enabled: true
                                    },
                                    pinch: {
                                        enabled: true
                                    },
                                    mode: 'x'
                                }
                            }
                        },
                        scales: {
                            x: {
                                type: 'linear',
                                title: {
                                    display: true,
                                    text: 'Days Since Bubble Start',
                                    color: '#ffffff',
                                    font: {
                                        size: 14,
                                        weight: '600'
                                    }
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.05)'
                                },
                                ticks: {
                                    color: '#a0a0b0'
                                }
                            },
                            y: {
                                title: {
                                    display: true,
                                    text: 'Bubble Index (Base 100)',
                                    color: '#ffffff',
                                    font: {
                                        size: 14,
                                        weight: '600'
                                    }
                                },
                                grid: {
                                    color: 'rgba(255, 255, 255, 0.05)'
                                },
                                ticks: {
                                    color: '#a0a0b0'
                                }
                            }
                        }
                    }
                };

                // Add annotations if available
                if (typeof Chart !== 'undefined' && Chart.registry && Chart.registry.plugins.get('annotation')) {
                    updateProgress('Adding markers...');
                    config.options.plugins.annotation.annotations = {
                        currentDay: {
                            type: 'line',
                            xMin: 1032,
                            xMax: 1032,
                            borderColor: '#10b981',
                            borderWidth: 2,
                            borderDash: [5, 5],
                            label: {
                                display: true,
                                content: 'You Are Here (Oct 25, 2025)',
                                position: 'start',
                                backgroundColor: 'rgba(16, 185, 129, 0.9)',
                                color: '#ffffff',
                                font: {
                                    size: 11,
                                    weight: '600'
                                },
                                padding: 6
                            }
                        },
                        dotcomPeak: {
                            type: 'line',
                            xMin: 1698,
                            xMax: 1698,
                            borderColor: '#3b82f6',
                            borderWidth: 2,
                            borderDash: [5, 5],
                            label: {
                                display: true,
                                content: 'Dotcom Peak (Sep 27, 2027)',
                                position: 'start',
                                backgroundColor: 'rgba(59, 130, 246, 0.9)',
                                color: '#ffffff',
                                font: {
                                    size: 11,
                                    weight: '600'
                                },
                                padding: 6
                            }
                        },
                        extendedPeak: {
                            type: 'line',
                            xMin: 1893,
                            xMax: 1893,
                            borderColor: '#f97316',
                            borderWidth: 2,
                            borderDash: [5, 5],
                            label: {
                                display: true,
                                content: 'Extended AI Peak (Mar 4, 2028)',
                                position: 'start',
                                backgroundColor: 'rgba(249, 115, 22, 0.9)',
                                color: '#ffffff',
                                font: {
                                    size: 11,
                                    weight: '600'
                                },
                                padding: 6
                            }
                        }
                    };
                }

                updateProgress('Rendering chart...');
                await new Promise(resolve => setTimeout(resolve, 100));

                bubbleChart = new Chart(ctx, config);

                updateProgress('Ready!');
                await new Promise(resolve => setTimeout(resolve, 300));

                hideLoading();
                setupEventListeners();

            } catch (error) {
                console.error('[Chart Initialization Error]', error);
                showError('Failed to initialize chart: ' + error.message);
            }
        }

        // Setup event listeners
        function setupEventListeners() {
            // Toggle markers
            const toggleBtn = document.getElementById('toggle-markers');
            if (toggleBtn) {
                toggleBtn.addEventListener('click', function() {
                    showMarkers = !showMarkers;
                    if (bubbleChart && bubbleChart.options.plugins.annotation) {
                        Object.keys(bubbleChart.options.plugins.annotation.annotations).forEach(key => {
                            bubbleChart.options.plugins.annotation.annotations[key].display = showMarkers;
                        });
                        bubbleChart.update();
                        this.textContent = showMarkers ? 'Hide Markers' : 'Show Markers';
                        this.classList.toggle('active', showMarkers);
                    }
                });
            }

            // Export CSV
            const exportBtn = document.getElementById('export-csv');
            if (exportBtn) {
                exportBtn.addEventListener('click', function() {
                    if (!bubbleChart) return;
                    
                    let csv = 'Day,Dotcom Index,AI Index\n';
                    const maxDays = Math.max(
                        bubbleChart.data.datasets[0].data.length,
                        bubbleChart.data.datasets[1].data.length
                    );
                    
                    for (let i = 0; i < maxDays; i++) {
                        const day = i;
                        const dotcom = bubbleChart.data.datasets[0].data[i] ? bubbleChart.data.datasets[0].data[i].y.toFixed(2) : '';
                        const ai = bubbleChart.data.datasets[1].data[i] ? bubbleChart.data.datasets[1].data[i].y.toFixed(2) : '';
                        csv += `${day},${dotcom},${ai}\n`;
                    }
                    
                    const blob = new Blob([csv], { type: 'text/csv' });
                    const url = URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'ai-bubble-tracker-data.csv';
                    a.click();
                    URL.revokeObjectURL(url);
                });
            }
        }

        // Update countdown timers
        function updateCountdowns() {
            const startDate = new Date('2022-11-30');
            const now = new Date('2025-10-25');
            const conservativeDate = new Date('2027-09-27');
            const extendedDate = new Date('2028-03-04');
            
            const daysToConservative = Math.ceil((conservativeDate - now) / (1000 * 60 * 60 * 24));
            const daysToExtended = Math.ceil((extendedDate - now) / (1000 * 60 * 60 * 24));
            
            const conservativeEl = document.getElementById('countdown-conservative');
            const extendedEl = document.getElementById('countdown-extended');
            
            if (conservativeEl) conservativeEl.textContent = daysToConservative.toLocaleString();
            if (extendedEl) extendedEl.textContent = daysToExtended.toLocaleString();
        }

        // Main initialization
        function init() {
            console.log('[AI Bubble Tracker] Starting initialization...');
            
            // Set loading timeout
            loadingTimeout = setTimeout(() => {
                console.warn('[AI Bubble Tracker] Loading timeout reached');
                showError('Loading is taking longer than expected. Please check your connection and try again.');
            }, LOADING_TIMEOUT_MS);

            // Update countdowns
            updateCountdowns();

            // Initialize chart
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', initializeChart);
            } else {
                initializeChart();
            }
        }

        // Start the app
        init();

        // Register service worker for PWA
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('data:text/javascript;base64,c2VsZi5hZGRFdmVudExpc3RlbmVyKCdpbnN0YWxsJywgZnVuY3Rpb24oZSkge2NvbnNvbGUubG9nKCdTZXJ2aWNlIFdvcmtlciBpbnN0YWxsZWQnKTt9KTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2ZldGNoJywgZnVuY3Rpb24oZSkge30pOw==')
                    .then(() => console.log('[PWA] Service Worker registered'))
                    .catch(err => console.log('[PWA] Service Worker registration failed:', err));
            });
        }
    </script>
</body>
</html>